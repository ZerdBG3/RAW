// ------------------------------------------------------
// -------------------- Bonus Action --------------------
// ------------------------------------------------------

// Depends on RAW_BonusActionSpellPoint and RAW_NotBonusActionSpellPoint created by
//   Public\RAW\ActionResourceDefinitions\ActionResourceDefinitions.lsx

new entry "RAW_BonusActionSpells"
type "PassiveData"
data "Properties" "IsHidden"
data "Boosts" "ActionResource(RAW_BonusActionSpellPoint,1,0);UnlockSpellVariant(RAW_BonusActionSpellCheck(),ModifyUseCosts(Add,RAW_BonusActionSpellPoint,1,0))"
data "StatsFunctorContext" "OnCast"
data "Conditions" "IsSpell() and not IsCantrip() and HasUseCosts('BonusActionPoint', true)"
data "StatsFunctors" "UseActionResource(RAW_NotBonusActionSpellPoint,1,0);UseActionResource(RAW_BonusActionSpellPoint,1,0);ApplyStatus(SELF,RAW_CAST_BONUS_ACTION_SPELL,100,1);ApplyStatus(SELF,RAW_CAST_NOT_BONUS_ACTION_SPELL,100,1)"

new entry "RAW_CAST_BONUS_ACTION_SPELL"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "h22935d1ag4b4fg42b3gb9degfde9bd560f65;1"
data "Description" "hb7c0af17gcd17g422dg96f2gda8a553610d7;1"
data "StackId" "RAW_CAST_BONUS_ACTION_SPELL"
data "TickType" "EndTurn"
data "Boosts" "UnlockSpellVariant(RAW_NotBonusActionSpellCheck(),ModifyTooltipDescription())"
data "RemoveConditions" "HasActionResource('RAW_NotBonusActionSpellPoint', 1, 0, false, false, context.Source)"
data "RemoveEvents" "OnTurn;OnActionResourcesChanged;OnCast;OnCastResolved"
data "StatusPropertyFlags" "DisableCombatlog;DisablePortraitIndicator;DisableOverhead"

new entry "RAW_NotBonusActionSpells"
type "PassiveData"
data "Properties" "IsHidden"
data "Boosts" "ActionResource(RAW_NotBonusActionSpellPoint,1,0);UnlockSpellVariant(RAW_NotBonusActionSpellCheck(),ModifyUseCosts(Add,RAW_NotBonusActionSpellPoint,1,0))"
data "StatsFunctorContext" "OnCast"
data "Conditions" "IsSpell() and not IsCantrip() and not HasUseCosts('BonusActionPoint', true)"
data "StatsFunctors" "RestoreResource(RAW_NotBonusActionSpellPoint,100%,0);UseActionResource(RAW_BonusActionSpellPoint,1,0);ApplyStatus(SELF,RAW_CAST_NOT_BONUS_ACTION_SPELL,100,1)"

new entry "RAW_CAST_NOT_BONUS_ACTION_SPELL"
type "StatusData"
data "StatusType" "BOOST"
using "RAW_CAST_BONUS_ACTION_SPELL"
data "Description" "h31af9e75g2b8bg4207gb1begc463e085f561;1"
data "StackId" "RAW_CAST_NOT_BONUS_ACTION_SPELL"
data "Boosts" "UnlockSpellVariant(RAW_BonusActionSpellCheck(),ModifyTooltipDescription())"
data "RemoveConditions" "HasActionResource('RAW_BonusActionSpellPoint', 1, 0, false, false, context.Source)"

// Not only adjusts the EnabledCondition to accomodate for the RAW_BonusActionSpellPoint action resource
//   but also fixes the cost from 3 Sorcery Points to 2
new entry "Metamagic_Quickened"
type "PassiveData"
using "Metamagic_Quickened"
data "DescriptionParams" "2"
data "EnabledConditions" "HasActionResource('SorceryPoint', 2, 0, false, false, context.Source) and HasActionResource('RAW_BonusActionSpellPoint', 1, 0, false, false, context.Source)"
data "Boosts" "UnlockSpellVariant(QuickenedSpellCheck(),ModifyUseCosts(Add,SorceryPoint,2,0),ModifyUseCosts(Replace,BonusActionPoint,1,0,ActionPoint))"
